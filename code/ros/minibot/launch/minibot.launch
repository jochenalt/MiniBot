<launch>
  <arg name="debug" default="false" />
  <arg name="pipeline" value="ompl" />
  <arg name="mongodb_port" value="62345" />
  <arg name="mongodb_host" value="localhost" />
  <arg name="no_minibot_server"  default="0"/>

  <!-- start the database server -->
  <node  name="mongodb_server" pkg="mongodb_store" type="mongodb_server.py" output="screen"/> 

  <!-- start a node providing services to access the database -->
  <node  name="mongodb_service" pkg="mongodb_store" type="message_store_node.py" output="screen"/>

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find minibot)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- listen to  /joint states, do forward kinematics and publish in tf -->
  <!-- dont throttle, use same frequency like  joint_states -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <rosparam param="ignore_timestamp">true</rosparam>
  </node>

  <!-- Run the main MoveIt executable without trajectory execution
       (we do not have controllers configured by default) -->
  <include file="$(find minibot)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="pipeline" value="$(arg pipeline)"  />
  </include>

  <!-- node to forward /tf to rosbridge_server -->
  <node name="tf2_web_republisher" pkg="tf2_web_republisher" type="tf2_web_republisher">
    <rosparam param="rate">25</rosparam> <!-- maximum frequency sent to the browser -->
  </node>

  <!-- provide websocket procotol to let the server communicate with the browsser-->
  <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" >
  </include>

  <!-- start marker proxy node -->
  <node pkg="interactive_marker_proxy" type="proxy" name="marker_proxy" 
        args="topic_ns:=/markers target_frame:=base_link" />

  <!-- launch web server
       index: use minibot package to delegate pathless calls to /minibot/index.html -->
  <include file="$(find roswww)/launch/roswww.launch">
    <arg name="name" value="minibot"/>
    <arg name="port" value="8085"/>
    <arg name="webpath" value="www"/>
    <arg name="index" value="minibot"/> 
  </include>

  <!-- start the server node  --> 
  <node pkg="minibot" type="minibot_server" name="minibot_server" output="screen"
           unless="$(eval arg('no_minibot_server'))">
  </node>
 
</launch>
