---- enable VM settings inw BIOS 
- In BIOS Settings: Enable virtualizations

--- setting up a Ubuntu 18.04 VM  on Windows 10
- download ubuntu 18.04 64 bit (AMD64) image) Image from http://releases.ubuntu.com/18.04/
- download virtual box 5.2.8 from  https://www.virtualbox.org/
- In settings, set path for virtual boxes
- install virtualbox Ubuntu along https://www.codeooze.com/windows-10/windows-10-ubuntu-vbox/

--- install gnome tweak tool
sudo apt install gnome-tweak-tool
# look for Tweak, and turn of animations

--- install gitkraken
sudo apt-get update
sudo apt-get install git
wget https://release.gitkraken.com/linux/gitkraken-amd64.deb
sudo dpkg -i gitkraken-amd64.deb

--- install git
sudo apt-get install git

--- instal sublime
wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list
sudo apt-get update
sudo apt-get install sublime-text

--- install ROS
- Install ROS melodic according to http://wiki.ros.org/ROS/Installation
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
sudo apt-get update
sudo apt-get install ros-melodic-desktop-full
sudo apt-get install ros-melodic-joint-state-publisher-gui
sudo apt-get install ros-melodic-roswww
sudo apt-get install ros-kinetic-catkin python-catkin-tools 

--- install necessities for ros3djs: rosbridge server, tf2 web republisher, robot_state_publisher, joint_state_publisher,
sudo apt-get install ros-melodic-rosbridge-suite
sudo apt-get install ros-melodic-tf2-web-republisher
sudo apt-get install ros-melodic-pr2-common
sudo apt-get install ros-melodic-robot-state-publisher
sudo apt-get install ros-melodic-interactive-marker-proxy

--- install moveit
sudo apt-get install ros-melodic-moveit

sudo apt install python-pip
python -m pip install tornado
sudo apt install python-bson
sudo rosdep init
rosdep update
echo "source /opt/ros/melodic/setup.bash" >> ~/.bashrc
source ~/.bashrc


--- install minibot sources
cd ~
git clone https://github.com/jochenalt/MiniBot.git -b master

---  generate catkin workspace
mkdir -p catkin_ws/src
cd catkin_ws

--- link to minibot sources
ln -s ~/MiniBot/code/ros/minibot ~/catkin_ws/src
ln -s ~/MiniBot/code/ros/roswww ~/catkin_ws/src
source ~/.bashrc

--- build (takes a while)
cd ~/catkin_ws/src
catkin build

--- install and create IKFast, along to https://ros-planning.github.io/moveit_tutorials/doc/ikfast/ikfast_tutorial.html
sudo apt-get install docker.io
sudo service docker start
sudo usermod -a -G docker $USER
# log off/log on
sudo apt-get install collada-urdf-tool
roscd minibot
cd config
rosrun xacro xacro --inorder -o minibot.urdf minibot.urdf.xacro
rosrun xacro xacro --inorder -o minibot.srdf minibot.srdf.xacro
rosrun collada_urdf urdf_to_collada minibot.urdf minibot.dae
rosrun moveit_kinematics round_collada_numbers.py minibot.dae minibot.rounded.dae 6
roscd minibot
cd ..
--moveit_config_pkg=minibot_moveit_config
rospack plugins --attrib=plugin moveit_core

--- install Eclipse/C++ to be used with ROS
--- dont install via apt-get!!!
--- download https://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/2019-12/R/eclipse-cpp-2019-12-R-linux-gtk-x86_64.tar.gz to ~/eclipse
wget https://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/2019-12/R/eclipse-cpp-2019-12-R-linux-gtk-x86_64.tar.gz 
tar xvf eclipse-cpp-2019-12-R-linux-gtk-x86_64.tar.gz 


# prepare eclipse project
catkin clean < echo -n "Y"
catkin build  --force-cmake -G"Eclipse CDT4 - Unix Makefiles"

#run the following script
ROOT=$PWD
cd build
for PROJECT in `find $PWD -name .project`; do
    DIR=`dirname $PROJECT`
    echo $DIR
    cd $DIR
    awk -f $(rospack find mk)/eclipse.awk .project > .project_with_env && mv .project_with_env .project
done
cd $ROOT

catkin build  --force-cmake -G"Eclipse CDT4 - Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug

#start eclipse with
bash -i -c "~/eclipse/eclipse" &



# create packages minibot_config
cd ~/catkin_ws/src
catkin_create_pkg minibot_config std_msgs rospy roscpp urdf

**********************************
- complete eclipse index
  add all includes which are shown by 'gcc -xc++ -E -v -' to the project to resolve missing include symbols in eclipse
  # import project in eclipse with "import into workspace"

  # To debug in eclipse, select executable. In environment, defined the two variables
  ROS_ROOT and ROS_MASTER_URI according to the value returned by 
  >echo $ROS_ROOT
  >echo $ROS_MASTER_URI 


